import React, {useState} from 'react';
import Chip from '@mui/material/Chip';
import makeStyles from '@mui/styles/makeStyles';

import {useCreateBookingMutation} from './BookingApi';
import {ErrorView} from '../../shared/views/ErrorView';
import {Header} from '../../shared/components/Texts';
import {MapModal} from '../../shared/components/modal/MapModal';
import {selectCurrentBusiness} from '../business/BusinessState';
import {Table, type TableColumn} from '../../shared/components/Table';
import {useAppSelector} from '../../app/Store';
import type {TimeSlotDto} from '../../autogenerated';
import {mapTimeSlotsToTableData} from '../timeslot/TimeSlotView';
import {Box, Grid} from '@mui/material';

const useStyles = makeStyles(() => ({
    address: {
        marginTop: 10,
    },
    badge: {
        marginTop: -10,
        marginLeft: 35,
    },
    box: {
        alignItems: 'center',
        display: 'flex',
        flexDirection: 'column',
    },
    row: {
        justifyContent: 'center',
    },
}));

export const CreateBookingView: React.FC = () => {
    const [showMapModal, setShowMapModal] = useState<boolean>(false);
    const styles = useStyles();

    const [createBooking] = useCreateBookingMutation();
    const business = useAppSelector(selectCurrentBusiness);

    if (!business) {
        return <ErrorView />;
    }

    const timeSlots = business.timeSlots?.filter((timeSlot) => timeSlot.available) ?? [];
    const columns: TableColumn[] = [
        {title: 'id', field: 'id', hidden: true},
        {title: 'Date', field: 'date'},
        {title: 'Interval', field: 'interval'},
    ];

    const actions = [
        {
            icon: () => <Chip size="small" label="Book Time" clickable color="primary" />,
            onClick: async (_: any, rowData: Partial<TimeSlotDto>) => {
                await createBooking({
                    timeSlotId: rowData.id ?? '',
                    businessId: rowData.businessId ?? '',
                });
            },
        },
    ];
    return (
        <Box className={styles.box}>
            <Header text={'Create Booking'} />

            <Grid container justifyContent="center">
                <MapModal
                    open={showMapModal}
                    title={`${business?.name} - ${business?.address?.city}`}
                    setVisible={() => setShowMapModal(false)}
                    zoom={14}
                    center={[
                        business.address?.coords?.longitude as number,
                        business.address?.coords?.latitude as number,
                    ]}
                    markers={[
                        [
                            business.address?.coords?.longitude as number,
                            business.address?.coords?.latitude as number,
                        ],
                        13,
                    ]}
                />
                <Grid item xs={6}>
                    <Table
                        actions={actions}
                        columns={columns}
                        data={mapTimeSlotsToTableData(timeSlots)}
                        title={
                            <>
                                <h5 className={styles.address}>{`${business?.name}: ${
                                    business.address?.street ?? ''
                                }, ${business.address?.city ?? ''}`}</h5>
                                <Chip
                                    className={styles.badge}
                                    size="small"
                                    label="Open map"
                                    color="primary"
                                    onClick={() => setShowMapModal(true)}
                                    clickable
                                />
                            </>
                        }
                        emptyMessage="No Time Slots Available"
                    />
                </Grid>
            </Grid>
        </Box>
    );
};
