import React, {useState} from 'react';
import {Chip, Grid} from '@mui/material';

import type {BusinessAggregateDto, BusinessDto} from '../../autogenerated';
import {
    Table,
    type TableAction,
    type TableColumn,
    type TableData,
} from '../../shared/components/Table';
import FormatUtil from '../../shared/util/FormatUtil';
import {
    MapModal,
    type MapModalProps,
    defaultMapProps,
} from '../../shared/components/modal/MapModal';

export type BusinessTableRowData = Pick<BusinessDto, 'id' | 'name' | 'type' | 'capacity'> & {
    city: string;
    street: string;
    type: string;
};

const mapToTableData = (
    businesses: BusinessDto[] | BusinessAggregateDto[] | undefined | null
): TableData =>
    businesses?.map((business) => ({
        id: business.id ?? '',
        name: business.name ?? '',
        city: business.address?.city ?? '',
        street: business.address?.street ?? '',
        businessHours: FormatUtil.formatInterval(business?.businessHours),
        type: business.type ?? '',
    })) ?? [];

const tableColumns: TableColumn[] = [
    {title: 'id', field: 'id', hidden: true},
    {title: 'Name', field: 'name'},
    {title: 'City', field: 'city'},
    {title: 'Street', field: 'street'},
    {title: 'Business Hours', field: 'businessHours'},
    {title: 'Type', field: 'type'},
];

type Props = {
    businesses: BusinessDto[] | BusinessAggregateDto[];
    action: TableAction;
    noDataMessage?: string;
};

export const BusinessTableWithMap: React.FC<Props> = ({
    businesses,
    action,
    noDataMessage,
}: Props) => {
    const [mapModalInfo, setMapModalInfo] = useState<MapModalProps>(defaultMapProps);

    const actions: TableAction[] = [
        action,
        {
            icon: () => <Chip size="small" label="See on map" clickable color="secondary" />,
            tooltip: 'Show location on map',
            onClick: (_: any, rowData: BusinessTableRowData) => {
                const business = businesses?.find((business) => business.id === rowData.id);
                const {coords, city} = business!.address!;
                setMapModalInfo({
                    open: true,
                    title: `${business?.name} - ${city}`,
                    zoom: 14,
                    center: [coords?.longitude, coords?.latitude],
                    markers: [[coords?.longitude, coords?.latitude], 13],
                });
            },
        },
    ];

    return (
        <Grid container justifyContent="center">
            <MapModal
                open={mapModalInfo.open}
                setVisible={() => setMapModalInfo(defaultMapProps)}
                zoom={mapModalInfo.zoom}
                center={mapModalInfo.center}
                markers={mapModalInfo.markers}
                title={mapModalInfo.title}
            />
            <Grid item xs={8}>
                <Table
                    title="Businesses"
                    actions={actions}
                    columns={tableColumns}
                    data={mapToTableData(businesses)}
                    noDataMessage={noDataMessage}
                />
            </Grid>
        </Grid>
    );
};
