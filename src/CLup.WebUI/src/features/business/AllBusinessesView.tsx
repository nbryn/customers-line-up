import React, {useState} from 'react';
import {useNavigate} from 'react-router';
import Chip from '@mui/material/Chip';
import makeStyles from '@mui/styles/makeStyles';

import {useGetAllBusinessesQuery} from './BusinessApi';
import {MapModal, defaultMapProps} from '../../shared/components/modal/MapModal';
import type {MapModalProps} from '../../shared/components/modal/MapModal';
import {Table, type TableColumn, type TableData} from '../../shared/components/Table';
import type {BusinessDto, TimeInterval} from '../../autogenerated';
import {CREATE_BOOKING_ROUTE} from '../../app/RouteConstants';
import {Box, Grid} from '@mui/material';
import {Header} from '../../shared/components/Texts';

const useStyles = makeStyles({
    box: {
        alignItems: 'center',
        display: 'flex',
        flexDirection: 'column',
    },
});

export const formatInterval = (interval: TimeInterval | undefined | null) =>
    `${(interval?.start as unknown as string).substring(0, 5)} - ${(
        interval?.end as unknown as string
    ).substring(0, 5)}`;

const mapBusinessesToTableData = (businesses: BusinessDto[] | undefined | null): TableData =>
    businesses?.map((business) => ({
        id: business.id ?? '',
        name: business.name ?? '',
        city: business.address?.city ?? '',
        street: business.address?.street ?? '',
        businessHours: formatInterval(business?.businessHours),
        type: business.type ?? '',
    })) ?? [];

export const AllBusinessesView: React.FC = () => {
    const [mapModalInfo, setMapModalInfo] = useState<MapModalProps>(defaultMapProps);
    const {data: businesses} = useGetAllBusinessesQuery();

    const navigate = useNavigate();
    const styles = useStyles();

    const columns: TableColumn[] = [
        {title: 'id', field: 'id', hidden: true},
        {title: 'Name', field: 'name'},
        {title: 'City', field: 'city'},
        {title: 'Street', field: 'street'},
        {title: 'Business Hours', field: 'businessHours'},
        {title: 'Type', field: 'type'},
    ];

    const actions = [
        {
            icon: () => <Chip size="small" label="Go to business" clickable color="primary" />,
            tooltip: 'See available time slots',
            onClick: (_: any, rowData: Partial<BusinessDto>) => {
                navigate(`${CREATE_BOOKING_ROUTE}/${rowData.id ?? ''}`);
            },
        },
        {
            icon: () => <Chip size="small" label="See on map" clickable color="secondary" />,
            tooltip: 'Show location on map',
            onClick: (_: any, rowData: Partial<BusinessDto>) => {
                const business = businesses?.find((business) => business.id === rowData.id);
                const {coords, city} = business!.address!;
                setMapModalInfo({
                    open: true,
                    title: `${business?.name} - ${city}`,
                    zoom: 14,
                    center: [coords?.longitude, coords?.latitude],
                    markers: [[coords?.longitude, coords?.latitude], 13],
                });
            },
        },
    ];

    return (
        <Box className={styles.box}>
            <Header text="Available Businesses" />
            <Grid container justifyContent="center">
                <MapModal
                    open={mapModalInfo.open}
                    setVisible={() => setMapModalInfo(defaultMapProps)}
                    zoom={mapModalInfo.zoom}
                    center={mapModalInfo.center}
                    markers={mapModalInfo.markers}
                    title={mapModalInfo.title}
                />
                <Grid item xs={8}>
                    <Table
                        actions={actions}
                        columns={columns}
                        data={mapBusinessesToTableData(businesses)}
                        title="Businesses"
                    />
                </Grid>
            </Grid>
        </Box>
    );
};
