import Cookies from 'js-cookie';

import {BUSINESS_BY_OWNER_TAG, BUSINESS_TAG, baseApi, USER_TAG} from '../../app/Store';
import {Configuration, EmployeeApi, type CreateEmployeeRequest} from '../../autogenerated';

const employeeApiInstance = new EmployeeApi(
    new Configuration({accessToken: Cookies.get('access_token')})
);

const employeeApi = baseApi.injectEndpoints({
    endpoints: (builder) => ({
        createEmployee: builder.mutation<void, CreateEmployeeRequest>({
            invalidatesTags: [BUSINESS_TAG, BUSINESS_BY_OWNER_TAG, USER_TAG],
            queryFn: async (createEmployeeRequest) => {
                try {
                    await employeeApiInstance.createEmployee(createEmployeeRequest);
                } catch (error) {
                    return {error} as any;
                }
            },
        }),
        deleteEmployee: builder.mutation<void, string>({
            invalidatesTags: [BUSINESS_TAG, BUSINESS_BY_OWNER_TAG, USER_TAG],
            queryFn: async (employeeId) => {
                try {
                    await employeeApiInstance.deleteEmployee(employeeId);
                } catch (error) {
                    return {error} as any;
                }
            },
        }),
    }),
});

export const {useCreateEmployeeMutation, useDeleteEmployeeMutation} = employeeApi;
