import Cookies from 'js-cookie';

import {AuthApi} from '../../autogenerated';
import type {LoginRequest, RegisterRequest} from '../../autogenerated';
import {USER_TAG, baseApi} from '../../app/Store';

const authApiInstance = new AuthApi();

const authApi = baseApi.injectEndpoints({
    endpoints: (builder) => ({
        login: builder.mutation<void, LoginRequest>({
            invalidatesTags: [USER_TAG],
            queryFn: async (loginRequest) => {
                try {
                    const response = await authApiInstance.login(loginRequest);
                    Cookies.set('access_token', response.data.token!);
                } catch (error) {
                    return {error} as any
                }
            },
        }),
        register: builder.mutation<void, RegisterRequest>({
            invalidatesTags: [USER_TAG],
            queryFn: async (registerRequest) => {
                try {
                    const response = await authApiInstance.register(registerRequest);
                    Cookies.set('access_token', response.data.token!);
                } catch (error) {
                    return {error} as any
                }
            },
        }),
    }),
});

export const {useLoginMutation, useRegisterMutation} = authApi;
