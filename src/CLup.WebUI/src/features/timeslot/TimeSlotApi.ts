import {BUSINESS_BY_OWNER_TAG, BUSINESS_TAG, baseApi, USER_TAG} from '../../app/Store';
import {TimeSlotApi, type GenerateTimeSlotsRequest} from '../../autogenerated';
import {apiMutation} from '../../shared/api/Api';

const TIMESLOT_DELETED_MSG = 'Time slot Deleted';

export const MANAGE_TIMESLOTS_ROUTE = '/business/timeslots/manage';
const TIMESLOTS_GENERATED_SUCCESS_INFO = {
    message: 'Success! Press see time slots to manage time slots.',
    toastInfo: {buttonText: 'See time slots', navigateTo: MANAGE_TIMESLOTS_ROUTE},
};

const timeSlotApi = baseApi.injectEndpoints({
    endpoints: (builder) => ({
        generateTimeSlots: builder.mutation<void, GenerateTimeSlotsRequest>({
            invalidatesTags: [BUSINESS_TAG, BUSINESS_BY_OWNER_TAG],
            queryFn: async (generateTimeSlotsRequest, api) => ({
                data: await apiMutation(
                    async (timeSlotApi) =>
                        await timeSlotApi.generateTimeSlots(generateTimeSlotsRequest),
                    TimeSlotApi,
                    api,
                    TIMESLOTS_GENERATED_SUCCESS_INFO
                ),
            }),
        }),
        deleteTimeSlot: builder.mutation<void, {timeSlotId: string; businessId: string}>({
            invalidatesTags: [BUSINESS_TAG, BUSINESS_BY_OWNER_TAG, USER_TAG],
            queryFn: async (request, api) => ({
                data: await apiMutation(
                    async (timeSlotApi) =>
                        await timeSlotApi.deleteTimeSlot(request.timeSlotId, request.businessId),
                    TimeSlotApi,
                    api,
                    {message: TIMESLOT_DELETED_MSG}
                ),
            }),
        }),
    }),
});

export const {useGenerateTimeSlotsMutation, useDeleteTimeSlotMutation} = timeSlotApi;
